@model FarmMartUI.Areas.Farmer.Models.FarmCropViewModel


@*<div class="example-modal" >*@
<div class="modal" role="dialog" id="formAddFarmCropDialog" aria-hidden="true" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Add/Update Crop</h4>
            </div>
            <div class="box-body">
                @using (Html.BeginForm("Add", "Crop", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.HiddenFor(model => model.ApplicationUserId)
                    @Html.HiddenFor(model => model.Id)
                    @Html.AntiForgeryToken()
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @if (Model.Id > 0)
                    {
                        <div class="hidden">
                            <div class="form-group">
                                <label class="control-label col-md-3">Crop Type:</label>
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.CropTypeId, Model.CropTypeDropDown, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CropTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3">Crop:</label>
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.CropId, Model.CropDropDown, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CropId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3">Crop Variety:</label>
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.CropVarietyId, Model.CropVarietyDropDown, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CropVarietyId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    }
                    else
                    {
                        <div class="form-group">
                            <label class="control-label col-md-3">Crop Type:</label>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.CropTypeId, Model.CropTypeDropDown, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CropTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Crop:</label>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.CropId, Model.CropDropDown, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CropId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Crop Variety:</label>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.CropVarietyId, Model.CropVarietyDropDown, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CropVarietyId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }


                    <div class="form-group">
                        <label class="control-label col-md-3">Hectarage:</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Hectarage, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Hectarage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Yield/Hecter:</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.YieldPerHectar, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.YieldPerHectar, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Note:</label>
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.CropVarietyNote, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CropVarietyNote, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                }
            </div>
            @*<div class="modal-body">
                    @using (Html.BeginForm("AddCropToFarm", "Crop", FormMethod.Post, new { enctype = "multipart/form - data" }))
                    {
                        @Html.HiddenFor(model => Model.FarmId)
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <div class="row col-md-offset-1" style="padding:10px;">
                                @foreach (var crop in Model.CropListItem)
                                {
                                    <div class="col-md-4">
                                        <div class="checkbox">
                                            <input type="checkbox" name="CropId" id="chck_@crop.Id" , value="@crop.Id" />
                                            <label for="chck_@crop.Id">@crop.Name</label>
                                        </div>
                                    </div>
                                }
                            </div>
                            <br />
                            <div class="row col-md-offset-0">
                                <div class="form-group">
                                    <div class="col-md-offset-0 col-md-4">
                                        <input type="submit" value="Add Crop" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div>
                        @Html.ActionLink("Crop not listed, add it", "AddCrop", "Crop")
                    </div>
                </div>*@

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@*</div><!-- /.example-modal -->*@
